class Solution {
public:
    int hIndex(vector<int>& citations) {
        int n = citations.size();
        if(n == 0) return 0;
        if(n == 1) return citations[0] > 0 ? 1 : 0;
    
        Sort(0, n - 1, citations);

        // for (int e : citations) {
        //     cout << e << ' ';
        // }
        // cout << '\n';

        // 정렬된 배열에서 h-index 계산
        for (int i = 0; i < n; i++) {
            if (citations[i] >= n - i) {
                return n - i;
            }
        }
        return 0;
    }

    void Sort(int i, int j, vector<int>& arr) {
        if(i >= j) return;
        
        int pivot = arr[(i + j) / 2];
        int left = i, right = j;
        
        while(left <= right) {
            while(arr[left] < pivot) left++;
            while(arr[right] > pivot) right--;
            if(left <= right) {
                swap(arr[left], arr[right]);
                left++; 
                right--;
            }
        }
        Sort(i, right, arr);
        Sort(left, j, arr);
    }
};